This document lists the new features, enhancements, fixed issues and, removed or deprecated features for Hazelcast Platform 5.2.2 release. The numbers in square brackets refer to the pull requests in Hazelcast's GitHub repository.

## Breaking Changes

* Changed the default cloud coordinator URL from `coordinator.hazelcast.cloud` to `api.viridian.hazelcast.com`.
When you use the default configuration, it now connects to Hazelcast Viridian instead of Hazelcast Cloud, potentially leading to not being able to connect to the cloud cluster. If you want to use Hazelcast Cloud, you need to change the value of `hazelcast.client.cloud.url` property to `https://coordinator.hazelcast.cloud`. [#23304]

## Enhancements

* Added support of [IMDSv2^](https://aws.amazon.com/about-aws/whats-new/2022/10/amazon-machine-images-support-instance-metadata-service-version-2-default/#:~:text=Posted%20On%3A%20Oct%203%2C%202022,depth%20against%20unauthorized%20metadata%20access.) for Hazelcast's AWS Discovery plugin.
* Hazelcast now allows serializing unsupported types via xref:serialization:compact-serialization.adoc#using-compact-serialization-with-zero-configuration[zero-configuration] provided that there is an explicit serializer implemented for the unsupported type. [#23569]
* Added `flock` to guard concurrent `pip` runs. [#22934]
* Added the ability of discovering ECS and EC2 clients by the Hazelcast members on Amazon ECS. [#22630]

## Fixes

* Fixed an issue where excessive amount of Kubernetes API calls were being logged when Automatic State Management feature is enabled in a Hazelcast cluster running on Kubernetes. [#23576]
* Fixed an issue where the JSON Query results were inconsistent, using the data stored as JSON via `HazelcastJsonValue`. [#23453]
* Fixed an issue where the unordered `mapUsingServiceAsync()` was losing the last items when there are no watermarks. [#23272]
* Fixed an issue where the message of an exception caused when reading a JDBC table column metadata was showing the data source reference instead of the table name. [#23123]
* Fixed an issue where the recorded moment of submitted job's start time was causing a race condition.
For short jobs, the job might have been completed even before recording the `startTime` metric; since this metric is collected after the job is submitted.
Now, this metric is collected just before submitting a job. [#23066]
* Fixed an issue where the offloading of map stores (which is enabled by default) was leading to unexpected unlocking behavior when committing transactions. [#22937]
